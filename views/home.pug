doctype
html(lang="en")
    head
        meta(charset='UTF-8')
        meta(name='viewport' content='width=device-width, initial-scale=1.0')
        title Live Polling
        link(rel='stylesheet' href='/css/style.css')
        link(rel='preconnect' href='https://fonts.gstatic.com')
        link(href='https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap' rel='stylesheet')
    body
        .cover
            .cover__box
                .line
                .cover__box-main
                    p.lines The link to your poll is
                    input#poll_link.links(value=`https://rapid-poll.vercel.app/poll/6rZNg6bRt230a5z3AJ69`)
                    p.lines The admin link to manage your poll and to see live update is
                    p.warning Don&apos;t share this link with your participants
                    .hide#admin
                        input#admin_link.links(value=`https://rapid-poll.vercel.app/poll/6rZNg6bRt230a5z3AJ69`)
                .cover__box-foot
                    a#poll_anchor(href='#' target='__blank') Visit your poll
                    a#admin_anchor(href='#') Visit admin page

        .line
        header
            .hero
                .hero__headings
                    h1 Create Live Polls
                    h3(style='text-align: center;') Get real time updates on your polls
        main
            .poll
                h2 Create a Poll
                .poll__info
                    h3 Fill the fields given below
                    a.demo__poll(href='/poll/l2g55iskhojhq4z' target="__blank") View a demo poll
            form.poll(action='#')
                label.poll__label(for='question') Poll Question
                textarea#name.poll__name(placeholder="What's your favorite anime ?" name='question' required)
                .poll__box
                    .poll__options
                        #opt-container-1.poll__option-container
                            label.poll__label(for='option-1') Option 1
                            .poll__option-box
                                input#option-1.poll__option(type='text' name='option-1' placeholder='Option 1' required)
                                //
                                    <svg class="poll__option-removeIcon" data-option="opt-container-1">
                                    <use xlink:href="/svg/sprite.svg#icon-circle-with-cross"></use>
                                    </svg>
                        #opt-container-2.poll__option-container
                            label.poll__label(for='option-2') Option 2
                            .poll__option-box
                                input#option-2.poll__option(type='text' placeholder='Option 2' required)
                                //
                                    <div class="poll__option-remove">
                                    <svg class="poll__option-removeIcon" data-option="option-2">
                                    <use xlink:href="/svg/sprite.svg#icon-circle-with-cross"></use>
                                    </svg>
                                    </div>
                    .poll__btns
                        button#add.poll__btn + Add another option
                        hr(style='margin-bottom: 3rem;')
                        button#submit.poll__btn Create my poll
            h3(style='text-align: center;margin-top: 8rem;')
                | A project by Akshat Trivedi
                br
                | Inspired by 
                a(href='https://rapid-poll.vercel.app/' style='color: #3489db;' target='__blank')
                    | Rapid
                    | poll
        script(src='/jquery/dist/jquery.min.js')
        script(src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js")
        script.
            function alerting(inner, type) {
            $('body').prepend(`<div class="alert alert--${type}" style="z-index:12000;">${inner}</div>`);
            setTimeout(() => {
            $('body').children().remove('.alert');
            }, 5000);
            }

            async function send(obj){
                let res = await axios({
                    method:'POST',
                    url:'/api/v1/poll/',
                    data: obj 
                });
                res = res.data;
                $('#poll_link').attr('value',`http://127.0.0.1:3000/poll/${res.data.poll_id}`);
                $('#admin_link').attr('value',`http://127.0.0.1:3000/poll/admin/${res.data.poll_id}/${res.data.admin_id}`);
                $('#poll_anchor').attr('href',`http://127.0.0.1:3000/poll/${res.data.poll_id}`);
                $('#admin_anchor').attr('href',`http://127.0.0.1:3000/poll/admin/${res.data.poll_id}/${res.data.admin_id}`);
                alerting(res.message, res.status);
            }
            var count = 2;
            let obj = {};
            $('.poll__btns').on('click', async function (e) {
            e.preventDefault();
            //console.log(1);
            if (e.target.id === 'add') {
            if (count > 2) {
            let removeEl = document.getElementById(`remove-${count}`);
            if (removeEl)
            removeEl.style.display = 'none';
            }

            const markup = `<div class="poll__option-container" id="opt-container-${count + 1}"><label for="option-${count + 1}" class="poll__label">Option ${count + 1}</label><div class="poll__option-box"><input type="text" class="poll__option" id="option-${count + 1}" name="option-${count + 1}" placeholder="Option ${count + 1}"><svg class="poll__option-removeIcon" id="remove-${count + 1}" data-option="opt-container-${count + 1}"><use xlink:href="/svg/sprite.svg#icon-circle-with-cross"></use></svg></div></div>`;
            count++;
            $('.poll__options').append(markup);
            } else if (e.target.id === 'submit') {
                const poll = $('#name').val();
                if(!poll) return alerting('Fill the required fields','fail');
                obj.name = poll;
                const markup = `<span class="spin"></span>`;
                $('#submit').append(markup);
                
                for (let i=1;i<=count;i++) {
                    let v = $(`#option-${i}`).val();
                    obj[`option-${i}`] = v;
                }
                
                await send(obj);

                $('.spin').remove();
                $('.cover').css('display', 'block');
            }
            })
            $('.poll__options').on('click', function (e) {
            let el = $(e.target);
            if (count > 2) {
            let removeEl = document.getElementById(`remove-${count}`);
            if (removeEl)
            removeEl.style.display = 'inline-block';
            }
            el = el.closest('.poll__option-removeIcon');
            if (el.hasClass('poll__option-removeIcon')) {    
            const id = el.data('option');
            el = document.getElementById(id);
            el.parentNode.removeChild(el);
            count--;
            }
            })

            $('body').on('click',function(e){
                let id = e.target.id;

                if(id==='poll_link'|| id==='admin'){
                    if(id==='admin'){
                        id='admin_link'
                    }
                    document.getElementById(id).select();
                    document.execCommand("copy");
                    alerting('Copied to clipboard','success');
                }
            })
